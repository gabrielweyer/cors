name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.vscode/**'
      - LICENSE
      - README.md
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.vscode/**'
      - LICENSE
      - README.md

jobs:
  Build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: yarn install
        run: yarn install
      - name: yarn lint
        run: yarn lint
      - name: yarn build-prod
        run: yarn build-prod
      - name: Version web artifact
        run: jq --arg formattedDate $(date +%Y%m%d) '.build = $formattedDate + "." + $ENV.GITHUB_RUN_NUMBER | .commit = $ENV.GITHUB_SHA' dist/environment.json > tmp.$$.json && mv tmp.$$.json dist/environment.json
      - name: Upload web artifact
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: dist
          if-no-files-found: error
      - name: Upload bicep artifact
        uses: actions/upload-artifact@v3
        with:
          name: bicep
          path: deploy
          if-no-files-found: error
  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs: Build
    env:
      resourceGroupName: cors-cache
      storageAccountName: corscache
    steps:
      - name: Download bicep artifact
        uses: actions/download-artifact@v3
        with:
          name: bicep
          path: deploy
      - name: Download web artifact
        uses: actions/download-artifact@v3
        with:
          name: web
          path: web
      - name: Sign in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set deployment name
        run: echo "DEPLOYMENT_NAME=main-$(date +%y%m%d-%H%M%S)-$(uuidgen | cut -c 1-4)" >> $GITHUB_ENV
      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          deploymentName: ${{ env.DEPLOYMENT_NAME }}
          resourceGroupName: ${{ env.resourceGroupName }}
          template: deploy/main.bicep
          parameters: >
            storageAccountName=${{ env.storageAccountName }}
          failOnStdErr: false
      - name: Create public $root container if not exist
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az storage container create \
              -n '$root' \
              --public-access blob \
              --account-name ${{ env.storageAccountName }}
      - name: Deploy
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az storage blob upload-batch \
              --overwrite \
              -d '$root' \
              -s web/ \
              --account-name ${{ env.storageAccountName }}
