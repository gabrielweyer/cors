pool:
  vmImage: 'ubuntu-20.04'

stages:
- stage: Build
  jobs:
  - job: BuildAndPublishArtifacts
    displayName: Build and publish artifacts
    steps:
    - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@3
      displayName: Install Yarn 1.21.1
      inputs:
        versionSpec: 1.21.1
    - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
      displayName: yarn install
      inputs:
        arguments: install
    - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
      displayName: yarn lint
      inputs:
        aguments: lint
    - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
      displayName: yarn build-prod
      inputs:
        arguments: build-prod
    - task: geeklearningio.gl-vsts-tasks-file-patch.json-patch-task.JsonPatch@3
      displayName: Version web Artifact
      inputs:
        JsonWorkingDir: 'dist/'
        JsonTargetFilters: environment.json
        JsonPatchContent: |
          = /build => "$(BUILD_BUILDNUMBER)"
          = /commit => "$(BUILD_SOURCEVERSION)"
        OutputPatchFile: true
        FailIfNoPatchApplied: true
    - publish: 'dist/'
      displayName: Publish Artifact - web
      artifact: web
    - publish: 'template/template.json'
      displayName: Publish Artifact - ARM
      artifact: arm

- stage: Release
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  variables:
  - name: ResourceGroupLocation
    value: 'Southeast Asia'
  - name: ResourceGroupName
    value: cors-cache
  - name: StorageAccountName
    value: corscache
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureResourceGroupDeployment@3
            displayName: 'Deploy ARM template'
            inputs:
              ConnectedServiceName: 'Visual Studio Professional with MSDN (251b1820-1cf0-476b-a9e5-5208d0fa93e7)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(ResourceGroupName)'
              location: '$(ResourceGroupLocation)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/arm/template.json'
              overrideParameters: -name $(StorageAccountName)
              deploymentMode: 'Incremental'
          - task: AzureCLI@2
            displayName: 'Create public $root container if not exist'
            inputs:
              azureSubscription: 'Visual Studio Professional with MSDN (251b1820-1cf0-476b-a9e5-5208d0fa93e7)'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: 'az storage container create -n ''$root'' --public-access "blob" --account-name "$1"'
              arguments: '$(StorageAccountName)'
          - task: AzureCLI@2
            displayName: Deploy
            inputs:
              azureSubscription: 'Visual Studio Professional with MSDN (251b1820-1cf0-476b-a9e5-5208d0fa93e7)'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: 'az storage blob upload-batch -d ''$root'' -s "$1/web/" --account-name "$2"'
              arguments: '$(Pipeline.Workspace) $(StorageAccountName)'
